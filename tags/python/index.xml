<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Jerry&#39;s Blog</title>
    <link>https://jerry871002.github.io/tags/python/</link>
    <description>Recent content in Python on Jerry&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>jerry871002@gmail.com (Jerry)</managingEditor>
    <webMaster>jerry871002@gmail.com (Jerry)</webMaster>
    <lastBuildDate>Sun, 06 Oct 2019 09:20:53 +0800</lastBuildDate>
    
	<atom:link href="https://jerry871002.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 神乎其技 Ch3</title>
      <link>https://jerry871002.github.io/posts/python-trick-ch3/</link>
      <pubDate>Sun, 06 Oct 2019 09:20:53 +0800</pubDate>
      <author>jerry871002@gmail.com (Jerry)</author>
      <guid>https://jerry871002.github.io/posts/python-trick-ch3/</guid>
      <description>這篇的內容是來自Python 神乎其技：精要剖析語法精髓，大幅提升程式功力！這本書的第三章，會介紹一些Python函式的特性與好用的功能
語彙閉包（closure） def get_speak_func(text, volumn): def whisper(): return text.lower() + &amp;#39;...&amp;#39; def yell(): return text.upper() + &amp;#39;!&amp;#39; if volumn &amp;gt; 0.5: return yell else: return whisperget_speak_func(&amp;#39;Hello, World&amp;#39;, 0.7)()&amp;#39;HELLO, WORLD!&amp;#39;  雖然 whisper 跟 yell 都沒有 text 參數，但仍然能夠使用
能夠做到這點的函式，稱為「閉包」
 可以用來預先設定行為的組態 def make_adder(n): def add(x): return x + n return addplus_3 = make_adder(3) plus_5 = make_adder(5)print(plus_3(4)) print(plus_5(4))7 9  make_adder 就好像一座「工廠」
 函式就是物件，物件也可以是函式（可被呼叫） class Adder: def __init__(self, n): self.n = n def __call__(self, x): return self.</description>
    </item>
    
  </channel>
</rss>