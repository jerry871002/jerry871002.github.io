<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://jerry871002.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>youremail@domain.com (Jerry)</managingEditor>
    <webMaster>youremail@domain.com (Jerry)</webMaster>
    <lastBuildDate>Sun, 06 Oct 2019 14:19:49 +0800</lastBuildDate>
    
	<atom:link href="https://jerry871002.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://jerry871002.github.io/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Awesomeness</title>
      <link>https://jerry871002.github.io/post/01/</link>
      <pubDate>Fri, 26 Sep 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/01/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Wonderful</title>
      <link>https://jerry871002.github.io/post/02/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/02/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Head First C</title>
      <link>https://jerry871002.github.io/post/head-first-c/</link>
      <pubDate>Sun, 06 Oct 2019 14:19:49 +0800</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/head-first-c/</guid>
      <description>深入淺出C 前幾章一些值得注意的小細節  &amp;amp;&amp;amp;表示「並且假如成功的話，就進行⋯⋯」
$ gcc zork.c -o zork &amp;amp;&amp;amp; ./zork break不能用來中斷if陳述式
誤用break去中斷if的後果可以看這裡（The 1990 AT&amp;amp;T Long Distance Network Collapse）
 串接指定
x = 4運算式本身也具有回傳值4
y = x = 4;把x和y都設定成4
 陣列變數當作指標使用
doses[3] == *(doses + 3) == *(3 + doses) == 3[doses]
 字串實字（String literals）永遠不能被更新
 指向字串實字的變數不能用來改變該字串的內容
char *cards = &amp;#34;JQK&amp;#34;; cards[2] = cards[1]; //不合法！！ 如果從字串實字重新建立一個陣列，就「能夠」修改該陣列
char cards[] = &amp;#34;JQK&amp;#34;; cards[2] = cards[1]; //合法！！  記憶體存儲器（位址由高至低）
   名稱 用途     Stack（堆疊） 區域變數（local variables）   Heap（堆積） 動態記憶體（dynamic memory）   Globals（全域區段） 全域變數（global variables）   Constants（常數區段） 唯讀   Code（程式碼區段） 唯讀    指標構成的陣列</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://jerry871002.github.io/post/my-first-post/</link>
      <pubDate>Sun, 06 Oct 2019 09:20:53 +0800</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/my-first-post/</guid>
      <description>語彙閉包（closure） def get_speak_func(text, volumn): def whisper(): return text.lower() + &amp;#39;...&amp;#39; def yell(): return text.upper() + &amp;#39;!&amp;#39; if volumn &amp;gt; 0.5: return yell else: return whisperget_speak_func(&amp;#39;Hello, World&amp;#39;, 0.7)()&amp;#39;HELLO, WORLD!&amp;#39;  雖然 whisper 跟 yell 都沒有 text 參數，但仍然能夠使用
能夠做到這點的函式，稱為「閉包」
 可以用來預先設定行為的組態 def make_adder(n): def add(x): return x + n return addplus_3 = make_adder(3) plus_5 = make_adder(5)print(plus_3(4)) print(plus_5(4))7 9  make_adder 就好像一座「工廠」
 函式就是物件，物件也可以是函式（可被呼叫） class Adder: def __init__(self, n): self.n = n def __call__(self, x): return self.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://jerry871002.github.io/post/hugoisforlovers/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://jerry871002.github.io/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://jerry871002.github.io/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Colenak</title>
      <link>https://jerry871002.github.io/post/03/</link>
      <pubDate>Sat, 28 Sep 2013 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Jerry)</author>
      <guid>https://jerry871002.github.io/post/03/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
  </channel>
</rss>